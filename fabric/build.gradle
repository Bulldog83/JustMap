plugins {
    id "com.github.johnrengelman.shadow" version "5.0.0"
}

configurations {
    shadow
}

architectury {
    platformSetupLoomIde()
}

repositories {
    maven { url "https://maven.terraformersmc.com/" }
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${rootProject.loader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_version}"
    modApi "me.shedaniel:architectury-fabric:${rootProject.architectury_version}"

    optionalApi "com.terraformersmc:modmenu:${rootProject.modmenu_version}"
	includedApi "me.shedaniel.cloth:cloth-config-fabric:${rootProject.cloth_version}"

    compileOnly(project(path: ":common")) {
        transitive = false
    }
    runtimeOnly(project(path: ":common", configuration: "transformDevelopmentFabric")) {
        transitive = false
    }
    shadow(project(path: ":common", configuration: "transformProductionFabric")) {
        transitive = false
    }
}

def optionalApi(String dep) {
    dependencies.modApi (dep) {
        exclude group: "net.fabricmc.fabric-api"
        exclude group: "net.fabricmc"
    }
}

def includedApi(String dep) {
    dependencies.modApi (dep) {
        exclude group: "net.fabricmc.fabric-api"
        exclude group: "net.fabricmc"
    }
    dependencies.include (dep) {
        exclude group: "net.fabricmc.fabric-api"
        exclude group: "net.fabricmc"
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadow]
    classifier "shadow"
}

remapJar {
    dependsOn(shadowJar)
    input.set(shadowJar.archivePath)
    classifier "fabric"
}