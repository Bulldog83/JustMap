plugins {
	id "architectury-plugin" version "2.0.68"
    id "forgified-fabric-loom" version "0.6.64" apply false
	id 'maven-publish'
	id 'eclipse'
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "forgified-fabric-loom"

    loom {
        silentMojangMappingsLicense()
    }
    
    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings loom.officialMojangMappings()
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"

	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8

    archivesBaseName = rootProject.archives_base_name
    version = rootProject.mod_version
    group = rootProject.maven_group

    def versionPropsFile = file('version.properties')
	def Properties versionProps = new Properties()
	def major = 1
	def minor = 0
	def build = 0

	if (versionPropsFile.canRead()) {
		versionProps.load(new FileInputStream(versionPropsFile))

		major = versionProps['VERSION_MAJOR'].toInteger()
		minor = versionProps['VERSION_MINOR'].toInteger()
		build = versionProps['VERSION_BUILD'].toInteger()
	}

	build += 1
		
	if (versionPropsFile.canWrite()) {
		versionProps['VERSION_MAJOR'] = major.toString()
		versionProps['VERSION_MINOR'] = minor.toString()
		versionProps['VERSION_BUILD'] = build.toString()
		versionProps.store(versionPropsFile.newWriter(), null)
	}

	version = "${major}.${minor}.${build}"
	
	tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

	task sourcesJar(type: Jar, dependsOn: classes) {
		classifier = "sources"
		from sourceSets.main.allSource
	}

	jar {
		from "LICENSE"
	}

	assemble {
		version += "-${project.minecraft_version}-release"
	}

    java {
        withSourcesJar()
    }
}