plugins {
	id 'fabric-loom' version '0.8-SNAPSHOT'
	id 'maven-publish'
	id 'idea'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version

def versionPropsFile = file('version.properties')
def Properties versionProps = new Properties()
def major = 1
def minor = 0
def build = 0

if (versionPropsFile.canRead()) {
	versionProps.load(new FileInputStream(versionPropsFile))

	major = versionProps['VERSION_MAJOR'].toInteger()
	minor = versionProps['VERSION_MINOR'].toInteger()
	build = versionProps['VERSION_BUILD'].toInteger()
}

build += 1
	
if (versionPropsFile.canWrite()) {
	versionProps['VERSION_MAJOR'] = major.toString()
	versionProps['VERSION_MINOR'] = minor.toString()
	versionProps['VERSION_BUILD'] = build.toString()
	versionProps.store(versionPropsFile.newWriter(), null)
}

version = "${major}.${minor}.${build}"

minecraft {}

repositories {
	maven { url "https://maven.fabricmc.net/" }
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/releases/" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings minecraft.officialMojangMappings()

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modApi "com.terraformersmc:modmenu:${project.modmenu_version}"
	modApi ("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}") {
		exclude (group: "net.fabricmc.fabric-api")
	}
	
	include ("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}") {
		exclude (group: "net.fabricmc.fabric-api")
	}
}

processResources {
	inputs.property "version", project.version
	duplicatesStrategy = 'WARN'

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

assemble {
	version += "-${project.minecraft_version}-release"
}